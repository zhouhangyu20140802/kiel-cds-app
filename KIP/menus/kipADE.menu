/*
 *                             Copyright (C) 1995
 *                    Cadence Design Systems, ICDG - Analog Division
 *                            All Rights Reserved.
 *
 *
 *
 *  $Source: /cvsrep/group/artist/src/simui/simui.menus,v $
 *
 *  $Author: cicinteg $
 *  $Revision: #1 $
 *  $Date: 2018/08/31 $
 *  $State: Exp $
 *
 */

/**********************************************************************
 *  
 *  DESCRIPTION
 *  -----------
 *
 *  This file contains the menu definitions for the Analog Artist
 *  Simulation Environment. Menus appear on the banner of the Main Window,
 *  on the banner of the Schematic Window, when in Analog Artist mode,
 *  on the banner of the "Command Type-In" window, and on the side of
 *  the Main Window as a row of icons.
 *  
 *  Banner menus are defined in two steps. First, for each window banner,
 *  the list of pulldowns is defined using commands
 *  sevSetMainWindowPulldownMenus, sevSetSchematicPulldownMenus, and
 *  sevSetTypeInWindowPulldownMenus. Second, lists of menu items for all
 *  pulldowns are defined using the command sevSetMenuItemLists. The icon
 *  menu only needs its list of items defined using sevSetMenuItemLists
 *  ("Fixedmenu").
 *  
 *  Menu definitions can be in one of two forms, the "simple form" or
 *  the "complete form". Even though the default menu definitions given
 *  later in this file follow the complete form, the simple form is
 *  adequate for most user menu customizations.
 *  
 *  Simple Custom Menu Form
 *  -----------------------
 *  
 *  The list of pulldowns is given simply as the list of the names (strings)
 *  of the pulldowns. For example,
 *  
 *	(sevSetMainWindowPulldownMenus '(
 *	    "Setup"
 *	    "Simulation"
 *	    "Results"
 *	))
 *  
 *  The list of menu items is given as a list of item-lists, with each
 *  item-list composed of two strings, the name (text) of the item and
 *  its callback. In the following example the given callbacks may not
 *  be real functions. Also, the first line needs to be there as given.
 *  
 *	(sevSetMenuItemLists (lambda (session name) (case name
 *
 *	    ( "Setup"		'(
 *		( "Design"		"setDesignCB()"		)
 *		( "Analyses"		"setAnalysesCB()"	)
 *		( "Variables"		"setVariablesCB()"	)
 *		( "Environment"		"SetEnvironmentCB()"	)
 *	    ))
 *
 *	    ( "Simulation"	'(
 *		( "Run"			"runSimulationCB()"	)
 *		( "Stop"		"stopSimulationCB()"	)
 *	    ))
 *
 *	    ( "Results"		'(
 *		( "Plot"		"plotResultsCB()"	)
 *		( "Print"		"printResultsCB()"	)
 *		( "Save"		"saveResultsCB()"	)
 *	    ))
 *	)))
 *  
 *  In order to specify a slider (second-level) menu, the second string
 *  of the menu item can be replaced by a list of name-callback string
 *  pairs. For example, the last pulldown from the previous example
 *  could take the following form:
 *  
 *	    ( "Results"		'(
 *		( "Plot"		"plotResultsCB()"	)
 *		( "Print"
 *		    (
 *			( "Tran"	"printTranResultsCB()"	)
 *			( "AC"		"printACResultsCB()"	)
 *			( "DC"		"printDCResultsCB()"	)
 *		    ))
 *		( "Save"		"saveResultsCB()"	)
 *	    ))
 *  
 *  
 *  Complete Custom Menu Form
 *  -------------------------
 *  
 *  The complete custom menu form allows users to specify the following:
 *  For each pulldown, an optional menu-items pointer name when different
 *  from the pulldown's name (text). For each menu item, an optional
 *  disabling (greying-out) condition, an optional flag on whether the
 *  item brings up a form and an optional submenu (slider) argument.
 *  Also, callbacks and disabling conditions can be specified either
 *  as strings or as (function-call) lists. For examples, look at the
 *  actual default menu definitions below.
 *  
 *  
 *  Multi-Level Customization
 *  -------------------------
 *  
 *  In addtion to using the command sevSetMenuItemLists which (re)defines
 *  all menu item lists, users may use the command sevAddMenuItemLists
 *  (same format as sevSetMenuItemLists) to add to the existing item-list
 *  definitions. In this way, users may add private pulldowns on top of site
 *  customizations, without having to repeat the site definitions.
 *  
 *  
 *  Direct-Plot Menu Customization
 *  ------------------------------
 *
 *  The special command sevDirectPlotMenu is provided for easier
 *  setting of the entries of the "Direct Plot" (slider) menu. It
 *  must be called inside sevSetMenuItemLists or sevAddMenuItemLists.
 *  The entries are specified as lists of three fields: a string
 *  indicating the name of the menu item, a symbol indicating the
 *  callback function and a symbol indicating the type of results
 *  required. The type can be a list of symbols, when more than one
 *  types are required. An optional fourth argument t indicates that
 *  a form will be brought up by the callback. As a note, the callback
 *  functions take two arguments, the environment session and the
 *  schematic window.
 *  As an example,
 *
 *   (sevAddMenuItemLists (lambda (session name) (case name
 *     ("Direct Plot"
 *  	 (sevDirectPlotMenu session '(
 *         ("Transient"		transientDirectPlot	tran)
 *         ("Transient-DC"	transientMinusDCDirectPlot (tran dc_op))
 *         ("AC Magnitude"	ACMagnitudeDirectPlot	ac)
 *         ("AC Phase"		ACPhaseDirectPlot	ac)
 *         ("FormBased"		FormBasedDirectPlot	xyz		t)
 *         )))
 *     )))
 *
 *  
 *********************************************************************/

(sevSetMainWindowPulldownMenus
  (let (menu)
   menu = `(
    		"S&ession"
    		"Set&up"
    		"&Analyses"
    		"&Variables"
    		"&Outputs"
    		"&Simulation"
    		"&Results"
    		"&Tools"
    		"&Help"
         "&KIP";Add KIP Menu
    )
    when( envGetVal("adexl.launchFromTest" "showMenu")
    	menu = cons("&Launch" menu)
    )
    menu
  )
)
    

(sevSetSchematicPulldownMenus
  `(
    ("&ADE L"     ?items "Session_Schematic")
    ("Set&up"     ?items "Setup_Schematic")
    "&Simulation"
    "&Results"
    ("Sim-&Tools" ?items "&Tools")
    ))

(sevSetTypeInWindowPulldownMenus
  `(
    ("&Window"			?items "Session_Encap")
    ))


(sevSetMenuItemLists
  (lambda
   (session name)
   (case
    name
    ("&Launch" 
    	`(
    		 ("A&DE XL" ?callback (_axlImportTestInADEXL ',session ?appName "ADE XL" ?tool "ADE"))
       		 ("AD&E GXL" ?callback (_axlImportTestInADEXL ',session ?appName "ADE GXL" ?tool "ADE"))
     	 )
    )
    ("Session_Common"
     `(
       ("&Save State" ?callback (sevSaveState ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("&Load State" ?callback (sevLoadState ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("Save S&cript" ?callback (sevSaveOceanScript ',session) ?form t  ?disable (sevNoEnvironment ',session))
       ("&Options" ?callback (sevEditOptions ',session) ?form t)
       ))
    ("S&ession"
     (cons
      `("Design &Window" ?callback (_sevOpenSchematicWithHighlightedTab ',session) ?form t)
      (append
       (sevMenuItems session "Session_Common")
       `(
	 ("Restore Default &View" ?callback (_sevRestore ',session))
	 ("&Reset" ?callback (sevReset ',session))
	 ("&Quit" ?callback (sevQuit ',session))
	 ))
      ))
    ("Session_Schematic"
     (cons
      `("Sim&ulation Window" ?callback (sevCreateMainWindow ',session) ?form t)
      (append
       (sevMenuItems session "Session_Common")
       `(
	 ("&Quit" ?callback (sevQuit ',session))
	 ))
      ))
    ("Session_Encap"
     `(
       ("&Close" ?callback (hiCloseWindow (hiGetCurrentWindow)))
       ))
    ("Setup_Common"
     `(
       ("&Simulator/Directory/Host" ?callback (sevChooseSimulator ',session) ?form t)
       ("&Temperature" ?callback (sevChooseTemperature ',session) ?form t)
       ("&Model Path" ?callback (sevMpuTool ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("&Environment" ?callback (sevChooseEnvironmentOptions ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("Stim&ulus" ?disable (sevNoEnvironment ',session)
	?subMenu
	(
	 ("Edit &Analog" ?callback (sevEditStimulus ',session 'analog) ?form t)
	 ("Edit &Digital" ?callback (sevEditStimulus ',session 'digital) ?form t ?disable (sevNonMixedSignal ',session))
	 ))
       ("Simulation &Files" ?disable (sevNoEnvironment ',session)
	?subMenu
	(
	 ("Edit &Include File" ?callback (sevEditSimulationFile ',session 'include) ?form t)
	 ("Edit &Model File" ?callback (sevEditSimulationFile ',session 'model) ?form t)
	 ))
       ))
    ("Set&up"
        (cons
        `("&Design" ?callback (sevChooseDesign ',session) ?form t)
        (sevMenuItems session "Setup_Common"))
    )
    ("Setup_Schematic"
     (append
      `(
	("Anal&yses" ?callback (sevEditSelectedAnas ',session) ?form t)
	("&Variables" ?callback (sevEditSelectedVars ',session) ?form t)
	("&Outputs" ?callback (sevEditSelectedOuts ',session) ?form t)
	("Select On D&esign"
	 ?subMenu
	 (
	  ("Outputs To Be &Plotted" ?callback (sevChangeOutsOnSchematic ',session 'plot))
	  ("Outputs To Be Sa&ved" ?callback (sevChangeOutsOnSchematic ',session 'save))
	  ;("Outputs To Be Marched" ?callback (sevChangeOutsOnSchematic ',session 'march) ?disable or((sevNoEnvironment ',session) equal("spectre" sevSimulator(',session)))) ; Commented for PCR 882104
	  ))
	("Save &All" ?callback (sevSaveOptions ',session) ?form t)
	)
      (sevMenuItems session "Setup_Common")
      ))
    ("&Analyses"
     `(
       ("&Choose" ?callback (sevEditSelectedAnas ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("&Delete" ?callback (sevDeleteSelectedAnas ',session) ?disable (sevNoAnaSelections ',session))
       ("&Enable" ?callback (sevActivateSelectedAnas ',session t) ?disable !(sevNonActiveSelectedAna ',session))
       ("D&isable" ?callback (sevActivateSelectedAnas ',session nil) ?disable !(sevActiveSelectedAna ',session))
       ))
    ("&Variables"
     `(
       ("&Edit" ?callback (sevEditSelectedVars ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("&Delete" ?callback (sevDeleteSelectedVars ',session) ?disable (sevNoVarSelections ',session))
       ("&Find" ?callback (sevFindSelectedVars ',session) ?disable (sevNoVarSelections ',session))
       ("Copy From &Cellview" ?callback (sevCopyCellViewVariables ',session ?copyCV t) ?disable (sevNoEnvironment ',session))
       ("Copy &To Cellview" ?callback (sevCopyVariablesToCellView ',session) ?disable (sevNoEnvironment ',session))
       ))
    ("&Outputs"
     `(
       ("&Setup" ?callback (sevEditSelectedOuts ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("&Delete" ?callback (sevDeleteSelectedOuts ',session) ?disable (sevNoOutSelections ',session))
       ("&Import" ?callback (sevImportOutputsFromFile ',session) ?disable (sevNoEnvironment ',session))
       ("&Export" ?callback (sevExportOutputsToFile ',session) ?disable (sevNoEnvironment ',session))
       ("Send &To Expression Editor" ?disable (sevNoEnvironment ',session)
       ?subMenu
        (
           ("All" ?callback (_sevSendOutputsToCalculator ',session ?selected nil ?filter "All") ?disable (sevNoEnvironment ',session))
           ("Expressions" ?callback (_sevSendOutputsToCalculator ',session ?selected nil ?filter "Expressions") ?disable (sevNoEnvironment ',session))
           ("Signals" ?callback (_sevSendOutputsToCalculator ',session ?selected nil ?filter "Signals") ?disable (sevNoEnvironment ',session))
        )
       )
       ("To Be Sa&ved" ?disable (sevNoEnvironment ',session)
	?subMenu
	(
	 ("&Select On Design" ?callback (sevChangeOutsOnSchematic ',session 'save) ?disable (sevNoEnvironment ',session))
	 ("Select By Subckt Inst" ?callback (sevChangeOutsOnSchematic ',session 'saveSubckt) ?disable (or (sevNoEnvironment ',session) (not (_asiIsSubcktSaveSupported (sevEnvironment ',session)))))
	 ("Select OP Parameters" ?callback (sevChangeOutsOnSchematic ',session 'opPoint) ?disable (or (sevNoEnvironment ',session) (not (_asiIsOpPointSaveSupported (sevEnvironment ',session)))))
	 ("&Add To" ?callback (sevSetPropertyForSelectedOuts ',session 'save t) ?disable (sevNoOutSelections ',session))
	 ("&Remove From" ?callback (sevSetPropertyForSelectedOuts ',session 'save nil) ?disable (sevNoOutSelections ',session))
	 ))
; following part is commented for PCR 882104
;("To Be Marched" ?disable or((sevNoEnvironment ',session)
	;			     equal("spectre" sevSimulator(',session)))
	;?subMenu
	;(
	 ;("Select On Schematic" ?callback (sevChangeOutsOnSchematic ',session 'march) ?disable (sevNoEnvironment ',session))
	 ;("Add To" ?callback (sevSetPropertyForSelectedOuts ',session 'march t) ?disable (sevNoOutSelections ',session))
	 ;("Remove From" ?callback (sevSetPropertyForSelectedOuts ',session 'march nil) ?disable (sevNoOutSelections ',session))
	 ;)) Commented for PCR 882104


    ("To Be &Plotted" ?disable (sevNoEnvironment ',session)
	?subMenu
	(
	 ("&Select On Design" ?callback (sevChangeOutsOnSchematic ',session 'plot) ?disable (sevNoEnvironment ',session))
	 ("&Add To" ?callback (sevSetPropertyForSelectedOuts ',session 'plot t) ?disable (sevNoOutSelections ',session))
	 ("&Remove From" ?callback (sevSetPropertyForSelectedOuts ',session 'plot nil) ?disable (sevNoOutSelections ',session))
	 ))
       ("Save &All" ?callback (sevSaveOptions ',session) ?form t ?disable (sevNoEnvironment ',session))
       ))
    ("&Simulation"
     `(
       ("Netlist &and Run" ?callback (sevNetlistAndRun ',session) ?disable (or (sevNoEnvironment ',session) (asiGetStatus (sevEnvironment ',session)))) ;;PCR895431
       ("&Run" ?callback (sevRunEngine ',session) ?disable (or (sevNoEnvironment ',session) (asiGetStatus (sevEnvironment ',session))))
       ("&Stop" ?callback (sevStopEngine ',session) ?disable (sevNoEnvironment ',session))
       ; ("Continue" ?form t ?disable (or (sevNoEnvironment ',session) (null (sevIsContinuable ',session))))
       ; ("Reset" ?disable (sevNoEnvironment ',session))
       ("&Options" ?disable (sevNoEnvironment ',session)
	?subMenu
	(
	 ("&Analog" ?callback (sevSetEngineOptions ',session 'analog) ?form t)
	 ("&Digital" ?callback (sevSetEngineOptions ',session 'digital) ?form t ?disable (sevNonMixedSignal ',session))
	 ("&Mixed Signal" ?callback (sevSetEngineOptions ',session 'mixed) ?form t ?disable (sevNonMixedSignal ',session))
	 ))
       ("&Netlist" ?disable (sevNoEnvironment ',session)
	?subMenu
	(;;PCR895431
         ("&Create" ?callback (sevNetlistFile ',session 'create)) 
         ("&Display" ?callback (sevNetlistFile ',session 'display) ?form t)
         ("&Recreate" ?callback (sevNetlistFile ',session 'recreate))
	 ))
       ("Command &Type-In" ?callback (sevOpenEncap ',session) ?form t ?disable (sevNoEnvironment ',session))
       ("Output &Log" ?callback (sevViewSimulatorOutput ',session) ?form t ?disable (or (sevNoEnvironment ',session) (sevNoOutputLog ',session)))
       ("&Convergence Aids" ?disable (sevNoEnvironment ',session) ?subMenu t)
       ))
    ("&Convergence Aids"
     `(
       ("&Store/Restore" ?callback (sevConvergence ',session 'storeRestore) ?form t)
       ("&Transient Store/Restore" ?callback (sevConvergence ',session 'transientStoreRestore) ?form t)
       ("&Node Set" ?callback (sevConvergence ',session 'nodeSet) ?form t)
       ("&Initial Condition" ?callback (sevConvergence ',session 'initialCondition) ?form t)
       ("&Force Node" ?callback (sevConvergence ',session 'forceNode) ?form t)
       ))
    ("&Results"
     `(
       ; ("Select Signals To Be Plotted" ?callback (sevChangeOutsOnSchematic ',session 'plot) ?disable (sevNoEnvironment ',session))
       ("Plot &Outputs" ?disable (or (sevNoResults ',session) (sevNoPlottableOutputs ',session)) ?subMenu t)
       ("Direct &Plot" ?disable (sevNoResults ',session) ?subMenu t)
       ("Pr&int" ?disable (sevNoResults ',session) ?subMenu t)
       ("&Annotate" ?disable (sevNoEnvironment ',session) ?subMenu t)
       ("Circuit &Conditions" ?callback (sevCircuitCond ',session) ?form t ?disable (or (sevNoResults ',session 'dc_op) (sevNoDesign ',session)))
       ("&Save" ?callback (sevSaveResults ',session) ?form t ?disable (or (sevNoEnvironment ',session) (_sevIsSaveResultsDisable ',session)))
       ("S&elect" ?callback (sevSelectResults ',session) ?form t)
       ("&Delete" ?callback (sevDeleteResults ',session) ?form t ?disable (_sevIsDeleteResultsDisable ',session))
       ("Prin&ting/Plotting Options" ?callback (sevEditPlottingOptions ',session) ?form t)
       ))
    ("Plot &Outputs"
     `(
       ; ("All" ?callback (sevPlotAllOutputs ',session) ?disable (or (sevNoPlottableSignals ',session) (sevNoResults ',session)))
       ("&Transient" ?callback (sevPlotSignals ',session 'tran) ?disable (or (and (sevNoPlottableSignals ',session) (_sevNoPlottableOpPoints ',session)) (sevNoResults ',session 'tran)))
       ("&AC" ?callback (sevPlotSignals ',session 'ac) ?disable (or (sevNoPlottableSignals ',session) (sevNoResults ',session 'ac)))
       ("&Noise" ?callback (sevPlotSignals ',session 'noise) ?disable (or (sevNoPlottableSignals ',session) (sevNoResults ',session 'noise)))
       ("&DC" ?callback (sevPlotSignals ',session 'dc) ?disable (or (and (sevNoPlottableSignals ',session) (_sevNoPlottableOpPoints ',session)) (sevNoResults ',session 'dc)))
       ("&Expressions" ?callback (sevEvaluateAndPlotExpressions ',session) ?disable (sevNoPlottableExpressions ',session))
       ))
    ("Direct &Plot"
     (sevDirectPlotMenu session
      '(
	("&Transient Signal"		asiiPlotTranSignalCB	tran)
	("Transient Min&us DC"		asiiPlotTranSignalNoDcCB (tran dc_op))
	("Transient &Sum"		asiiPlotTranAddCB	tran)
	("Transient Diff&erence"		asiiPlotTranSubtractCB	tran)
	("AC &Magnitude"			asiiPlotACMagCB		ac)
	("AC dB&10"			asiiPlotACDb10CB	ac)
	("AC dB&20"			asiiPlotACDb20CB	ac)
	("AC &Phase"			asiiPlotACPhaseCB	ac)
	("&AC Magnitude && Phase"		asiiPlotACMagAndPhaseCB	ac)
	("AC &Gain && Phase"		asiiPlotBodeAnalysisCB	ac)
	("Equivalent &Output Noise"	asiiPlotEqOutputNoiseCB	noise)
	("Equivalent &Input Noise"	asiiPlotEqInputNoiseCB	noise)
	("S&quared Output Noise"		asiiPlotNoiseCB		noise)
	("Squared Input &Noise"		asiiPlotSquInputNoiseCB	noise)
	("Noise &Figure"			asiiPlotNoiseFigureCB	(ac noise))
	("&DC"				asiiPlotDCCB		dc)
	))
     )
    ("Pr&int"
     `(
       ("DC Node &Voltages" ?callback (sevPrintResults ',session 'dcNodeVoltages) ?disable (sevNoResults ',session 'dc_op))
       ("DC &Operating Points" ?callback (sevPrintResults ',session 'dcOpPoints) ?disable (sevNoResults ',session 'dc_op))
       ("&Model Parameters" ?callback (sevPrintResults ',session 'modelParameters) ?disable (sevNoResults ',session 'dc_op))
       ("&Transient Node Voltages" ?callback (sevPrintResults ',session 'tranNodeVoltages) ?disable (sevNoResults ',session 'tran))
       ("Transient Operating &Points" ?callback (sevPrintResults ',session 'tranOpPoints) ?disable (sevNoResults ',session 'tran))
("&S-Parameter"  ?disable (sevNoResults ',session 'sparam )
          ?subMenu
           (
            ("&1 port" ?callback (sevPrintResults ',session 'sparam1p)  )
            ("&2 port" ?callback (sevPrintResults ',session 'sparam2p) )
            ("&3 port" ?callback (sevPrintResults ',session 'sparam3p)  )
          )
       )

       ("&Noise Parameters" ?callback (sevPrintResults ',session 'noiseParameters) ?disable (sevNoResults ',session 'noise))
       ("Noise S&ummary" ?callback (sevPrintResults ',session 'noiseSummary) ?form t ?disable (sevNoResults ',session 'noise))

       ))
    ("&Annotate"
     `(
       ("DC Node &Voltages" ?callback (sevAnnotateResults ',session 'dcNodeVoltages) ?disable (sevNoResults ',session 'dc_op))
       ("DC &Operating Points" ?callback (sevAnnotateResults ',session 'dcOpPoints) ?disable (sevNoResults ',session 'dc_op))
       ("&Model Parameters" ?callback (sevAnnotateResults ',session 'modelParameters) ?disable (sevNoResults ',session 'dc_op))
       ("&Transient Node Voltages" ?callback (sevAnnotateResults ',session 'tranNodeVoltages) ?form t ?disable (sevNoResults ',session 'tran))
       ("Transient Operating &Points" ?callback (sevAnnotateResults ',session 'tranOpPoints) ?disable (sevNoResults ',session 'tran) )
       ("Net &Names" ?callback (sevAnnotateResults ',session 'netNames))
       ("&Component Parameters" ?callback (sevAnnotateResults ',session 'componentParameters))
       ("Design &Defaults" ?callback (sevAnnotateResults ',session 'defaults))
       ))

    ("&Tools"
      nconc(
       `(("&Parametric Analysis" ?callback (sevParametricTool ',session) ?form t ?disable (sevNoEnvironment ',session)))
       (if _axlIsAdeEDFMallowed() then ; 811559
         `(("Corners" ?callback (sevCornersTool ',session) ?form t ?disable (sevNoEnvironment ',session))
           ("Monte Carlo" ?callback (sevMonteCarloTool ',session) ?form t ?disable (sevNoEnvironment ',session))
           ("Optimization" ?callback (sevOptimizationTool ',session) ?form t ?disable (sevNoEnvironment ',session)))
       else
           nil
       )
      '(("separator")
        ("&Calculator" ?callback (sevOpenCalculator) ?form t)
        ("Results &Browser" ?callback (sevOpenDRLBrowser) ?form t)
        ("&Waveform" ?callback (sevOpenPlotWindow ',session) ?form t)
        ("Results &Display" ?callback (sevOpenPrintWindow ',session) ?form t)
        ("&Job Monitor" ?callback (sevOpenJobMonitor) ?form t)
       )
      ) ; end of nconc
    ) ; end of Tools
    ("HoriFixedMenu"
     `(
       ("Choose Design" ?callback (sevChooseDesign ',session) ?form t ?itemIcon ,(sevIcon 'design))
       ("Simulator/Directory/Host" ?callback (sevChooseSimulator ',session) ?form t ?itemIcon ,(sevIcon 'simulator))
       ("Temperature" ?callback (sevChooseTemperature ',session) ?itemIcon ,(sevIcon 'temp))
       ("Model Libraries" ?callback (sevEditModels ',session) ?form t ?itemIcon ,(sevIcon 'model))
       ("Stimuli" ?callback (sevSetupStimuli ',session) ?form t ?itemIcon ,(sevIcon 'stimuli))
       ("Environment" ?callback (sevChooseEnvironmentOptions ',session) ?form t ?itemIcon ,(sevIcon 'envFiles))
       ("Save State" ?callback (sevSaveState ',session) ?form t ?itemIcon ,(sevIcon 'saveState))
       ("Load State" ?callback (sevLoadState ',session) ?form t ?itemIcon ,(sevIcon 'loadState))
       ))
    ("FixedMenu"
     `(
       ("Choose Analyses" ?callback (sevEditSelectedAnas ',session) ?form t ?itemIcon ,(sevIcon 'analyses))
       ("Edit Variables" ?callback (sevEditSelectedVars ',session) ?form t ?itemIcon ,(sevIcon 'variables))
       ("Setup Outputs" ?callback (sevEditSelectedOuts ',session) ?form t ?itemIcon ,(sevIcon 'outputs))
       ("Delete" ?callback (sevDeleteSelections ',session) ?itemIcon ,(sevIcon 'delete))
       ("Run Simulation" ?callback (sevRunEngine ',session) ?itemIcon ,(sevIcon 'run))
       ("Stop Simulation" ?callback (sevStopEngine ',session) ?itemIcon ,(sevIcon 'stop))
       ("Plot Outputs" ?callback (sevPlotAllOutputs ',session) ?itemIcon ,(sevIcon 'plot))
       ))
    ("schADELMenu1"
     `(
       ("Choose Design" ?callback (sevChooseDesign sevSession(hiGetCurrentWindow())) ?form t ?itemIcon ,(sevIcon 'design))
       ("Choose Analyses" ?callback (sevEditSelectedAnas sevSession(hiGetCurrentWindow())) ?form t ?itemIcon ,(sevIcon 'analyses))
       ("Edit Variables" ?callback (sevEditSelectedVars sevSession(hiGetCurrentWindow())) ?form t ?itemIcon ,(sevIcon 'variables))
       ("Setup Outputs" ?callback (sevEditSelectedOuts sevSession(hiGetCurrentWindow())) ?form t ?itemIcon ,(sevIcon 'outputs))
       ("Delete" ?callback (sevDeleteSelections sevSession(hiGetCurrentWindow())) ?itemIcon ,(sevIcon 'delete))
       ("Run Simulation" ?callback (sevRunEngine sevSession(hiGetCurrentWindow())) ?itemIcon ,(sevIcon 'run))
       ("Stop Simulation" ?callback (sevStopEngine sevSession(hiGetCurrentWindow())) ?itemIcon ,(sevIcon 'stop))
       ("Plot Outputs" ?callback (sevPlotAllOutputs sevSession(hiGetCurrentWindow())) ?itemIcon ,(sevIcon 'plot))
       ))
    ("schADELMenu2"
     `(
       ("Calculator" ?callback (sevOpenCalculator) ?itemIcon ,hiLoadIconFile("calculator.png" 32 32))
       ("Results Browser" ?callback (sevOpenDRLBrowser) ?itemIcon ,hiLoadIconFile("results-db.png" 32 32))
       ("Select Results" ?callback (sevSelectResults sevSession(hiGetCurrentWindow())) ?itemIcon ,hiLoadIconFile("select-data.png" 32 32))
       ))
    ("&Help"
     `(
       ("&Contents" ?callback (ddsOnLineHelp "ArtistNews"))
       ("What's &New" ?callback (ddsOnLineHelp "pnAnAsim"))
       ("&Known Problems and Solutions" ?callback (ddsOnLineHelp "kpAnAsim" ))
       ("separator")
       ("Virtuoso &Documentation" ?callback (ddsOnLineHelp 'main))
       ("&SKILL API Finder" ?callback (startFinder))
       ("Cadence &Video Library" 
	            ?callback (_ddsLaunchBrowser "http://support.cadence.com/wps/myportal/cos/COSHome/resources/VideoLibrary/"))
       ("separator")
       ("Cadence &Online Support" 
		        ?callback (_ddsLaunchBrowser "http://support.cadence.com"))
       ("Cadence &User Forums" ?callback (_ddsLaunchBrowser "http://www.cadence.com/community/forums/"))
       ("separator")
       ("&About Analog Design Environment" ?callback (sevAboutTool _artADEName()))
      ))
      ;; The menus to go under the ADE Explorer menu in an
      ;; Explorer-Schematic window - the sub-menus should match the items in
      ;; sevSetSchematicPulldownMenus()
      ("ExplorerSchematic"
         list(
              list("S&ession"    ?subMenu sevMenuItems(,session "Session_Schematic"))
              list("Set&up"      ?subMenu sevMenuItems(,session "Setup_Schematic"))
              list("&Simulation" ?subMenu sevMenuItems(,session "&Simulation"))
              list("&Results"    ?subMenu sevMenuItems(,session "&Results"))
              list("&Tools"      ?subMenu sevMenuItems(,session "&Tools"))
          )
      )
      ("&KIP"
         `(
             ("Netlist &and Run" ?callback (kipADENetlistRun))
             ("&Run" ?callback (kipADERun))
             ("&Stop" ?callback (kipADEStop))
             ("&Netlist" 
               (
                   ("&Create" ?callback (kipADENetlistCreate))
                   ("&Display" ?callback (kipADENetlistDisplay))
                   ("&Recreate" ?callback (kipADENetlistRecreate))
				  ("&EncyrptCreate" ?callback (kipADENetlistEncryptCreate))
               )             
             )
          )     
      )

    )))
